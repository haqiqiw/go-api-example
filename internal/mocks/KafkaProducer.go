// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	kafka "github.com/confluentinc/confluent-kafka-go/v2/kafka"

	mock "github.com/stretchr/testify/mock"
)

// KafkaProducer is an autogenerated mock type for the KafkaProducer type
type KafkaProducer struct {
	mock.Mock
}

// Produce provides a mock function with given fields: msg, deliveryChan
func (_m *KafkaProducer) Produce(msg *kafka.Message, deliveryChan chan kafka.Event) error {
	ret := _m.Called(msg, deliveryChan)

	if len(ret) == 0 {
		panic("no return value specified for Produce")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*kafka.Message, chan kafka.Event) error); ok {
		r0 = rf(msg, deliveryChan)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewKafkaProducer creates a new instance of KafkaProducer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewKafkaProducer(t interface {
	mock.TestingT
	Cleanup(func())
}) *KafkaProducer {
	mock := &KafkaProducer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
